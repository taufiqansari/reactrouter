{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/Pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","DUMMY_QUOTES","AllQuotes"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iFCkB5CC,EAjBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAGrB,cAAC,IAAD,CAASC,GAAE,iBAAYN,EAAMO,IAAMN,UAAU,MAA7C,iC,wBCiCSO,EA9BG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAEXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QACrCC,GAfYV,EAecT,EAAMS,OAfZC,EAeoBK,EAdvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAcxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QANe,WAC3Bb,EAAQc,KAAK,gBAAkBV,EAAqB,OAAS,SAKzD,kBACQA,EAAqB,aAAe,iBAG9C,oBAAId,UAAWC,IAAQwB,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,aC/BjBsB,EAAe,CACnB,CACEtB,GAAI,KACJF,OAAQ,SACRD,KAAM,0BAER,CACEG,GAAI,KACJF,OAAQ,OACRD,KAAM,6BAWK0B,UARG,WAChB,OACE,8BACE,cAAC,EAAD,CAAWrB,OAAQoB","file":"static/js/5.8fb57503.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__NorgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1J2m-\",\"sorting\":\"QuoteList_sorting__35WDc\"};","import classes from \"./QuoteItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n\n      <NavLink to={`/quote/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push(\"/quote?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import React from \"react\";\r\nimport QuoteList from \"../quotes/QuoteList\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Taufiq\",\r\n    text: \"Learning react is fun!\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Tauf\",\r\n    text: \"Learning react is great!\",\r\n  },\r\n];\r\nconst AllQuotes = () => {\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={DUMMY_QUOTES} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}